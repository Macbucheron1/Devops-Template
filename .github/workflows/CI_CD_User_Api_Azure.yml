name: User API CI CD Azure

on:
  push:
    branches: ["main"]
    paths:
      - 'user_api_Azure/**'
      - '.github/workflows/CI_CD_User_Api_Azure.yml'

env:
  working-directory: ./user_api_Azure # Set the working directory
  AZURE_WEBAPP_NAME: UserApi-Mac-Xeroxx # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: "." # set this to the path to your web app project, defaults to the repository root

jobs:
  build:
    strategy: # Define the matrix for the job
      matrix: # We will get 1 jobs : 1 OS * 1 Node.js version * 1 Redis version
        os: [ubuntu-latest] # All the OS to run the job
        node_version: [18.x] # all the Node.js version
        redis_version: ["6.x"] # all the Redis version
      max-parallel: 1 # This ensures jobs run one after another

    name: User API on ${{matrix.os}} using NodeJS ${{matrix.node_version}} and Redis ${{matrix.redis_version}} # name of the job
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        working-directory: ${{ env.working-directory }} # Set the default working directory

    steps:
      # Step 1: Checkout the code
      - name: Checkout the code
        uses: actions/checkout@v4

      # Removed the Redis setup step as we are not using Redis localy in the Azure deployment

      # Step 2: Setup Node.js
      - name: Setup Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v4
        with:
          cache-dependency-path: ${{ env.working-directory }}
          node-version: ${{ matrix.node_version }}
          cache: "npm"

      # Step 3: Install project dependencies
      - name: Install Node dependencies
        run: npm install

      # Step 4: Run linter
      - name: Run Linter
        run: npm run lint

      # Step 5: Run tests to verify the build
      - name: Running the User API tests
        run: npm test

      # Step 6: Upload artifact for deployment only for Ubuntu and Node.js 18.x (because we are deploying only from this configuration)
      - name: Upload artifact for deployment
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.node_version == '18.x' }}
        uses: actions/upload-artifact@v4
        with:
          name: user-api-build
          path: ./user_api_Azure
          
          
  deploy: # This job deploys the application to Azure Web App Service.
    name: Deploy to Azure Web App Service

    defaults:
      run:
        working-directory: ${{ env.working-directory }}

    permissions:
      contents: none

    # It runs on the latest Ubuntu runner and depends on the 'build' job.
    runs-on: ubuntu-latest
    needs: build 

    # Name of the deployment
    environment:
      name: "Development"

    steps:

      # Step 1: Download the build artifact from the 'build' job using the 'actions/download-artifact' action.
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: user-api-build

      # Step 2: Deploy the application to Azure Web App Service using the 'azure/webapps-deploy' action.
      - name: "Deploy to Azure WebApp"
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}

