name: User API CI

on:
  push:
    branches: ["main"]

env:
  working-directory: ./user_api # Set the working directory
  AZURE_WEBAPP_NAME: UserApi-Mac-Xeroxx    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root

jobs:

  build:
    strategy: # Define the matrix for the job
      matrix: # We will get 6 jobs : 2 OS * 3 Node.js version * 1 Redis version
        os: [ubuntu-latest, macos-latest]  # All the OS to run the job
        node_version: [18.x, 20.x, 22.x]  # all the Node.js version
        redis_version: ["6.x"]  # all the Redis version

    name: User API on ${{matrix.os}} using NodeJS ${{matrix.node_version}} and Redis ${{matrix.redis_version}} # name of the job
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        working-directory: ${{ env.working-directory }} # Set the default working directory

    steps:
      # Step 1: Checkout the code
      - name: Checkout the code
        uses: actions/checkout@v4

      # Step 2: Setup Redis
      - name: Setup Redis ${{ matrix.redis_version }}
        uses: shogo82148/actions-setup-redis@v1
        with:
          redis-version: ${{ matrix.redis_version }}

      # Step 3: Check if Redis is running
      - name: Check if Redis is running
        run: redis-cli ping

      # Step 4: Setup Node.js
      - name: Setup Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v4
        with:
          cache-dependency-path: ${{ env.working-directory }}
          node-version: ${{ matrix.node_version }}
          cache: "npm"

      # Step 5: Install project dependencies
      - name: Install Node dependencies
        run: npm install

      # Step 6: Run linter
      - name: Run Linter
        run: npm run lint

      # Step 7: Run tests to verify the build
      - name: Running the User API tests
        run: npm test

      # Step 8: Upload artifact for subsequent jobs
      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v3
        with:
          name: user-api-build
          path: ./user_api

  deploy:
    name: Deploy to Azure Web App Service
    defaults:
      run:
        working-directory: ${{ env.working-directory }}
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: user-api-build

      - name: "Deploy to Azure WebApp"
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
