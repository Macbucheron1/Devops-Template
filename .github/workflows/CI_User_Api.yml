name: User API CI

on:
  push:
    branches: ["main"]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node_version: ["18.19.1"]
        redis_version: ["6.x"]

    name: User API on ${{ matrix.os }} using NodeJS ${{ matrix.node_version }} and Redis ${{ matrix.redis_version }}
    runs-on: ${{ matrix.os }}
    env:
      working-directory: ./user_api

    defaults:
      run:
        working-directory: ${{ env.working-directory }}

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Setup Redis on non-Windows platforms
        if: runner.os != 'Windows'
        uses: shogo82148/actions-setup-redis@v1
        with:
          redis-version: ${{ matrix.redis_version }}

      - name: Setup Redis on Windows
        if: runner.os == 'Windows'
        run: |
          # Check if WSL2 is installed
          if (wsl --list --quiet | Select-String "^Ubuntu$") {
            Write-Output "Ubuntu is already installed"
          } else {
            # Install WSL2 and Ubuntu
            wsl --install -d Ubuntu
          }
          # Start Redis server in Ubuntu
          wsl sudo apt-get update
          wsl sudo apt-get install -y redis
          wsl sudo service redis-server start

      - name: Check if Redis is running
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            wsl redis-cli ping
          else
            redis-cli ping
          fi

      - name: Setup Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v4
        with:
          cache-dependency-path: ${{ env.working-directory }}
          node-version: ${{ matrix.node_version }}
          cache: "npm"

      - name: Install Node dependencies
        run: npm install
        working-directory: ${{ env.working-directory }}

      - name: Running the User API tests
        run: npm test
        working-directory: ${{ env.working-directory }}